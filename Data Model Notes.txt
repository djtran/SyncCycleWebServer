#Data Model

Store information on a per-ride basis:

db = SyncCycle

___________Collections_

users
(Date)(Name)Ride#
	Ex: 120217SallyRide1
...

________Users:______

{
	name : 'Sally',
	rides : [
	"RideDec0217Sally1",
	//etc
	],
	//other miscellaneous info? Achievements or whatever.

}



________Ride:__________

{
	'id' : "stats",
	'energy' : {
		"used" : x, 
		"equivalent" : y, 
		"savings" : z
		},
	'physics' : {
		"needed" : x, 
		"carNeeded" : y
		},
	'carbon' : {
		"emissionsPrevented" : x
		},
	'speed' : {
		"average" : x, 
		"top" : y
		},
	'distance' : {
		"traveled" : x
		},
	'time' : {
		"elapsed" : x
		},
	//etc
}

for each data point:
{
	'sensor' : "speedometer",
	'time' : 25,
	'value' : 12.34
}

{
	'sensor' : 'sensor2',
	'time' : 26.4,
	'value' : 50.543
}


## Python ##
// find the parent ‘host’ document
> host = db.users.findOne({name : 'Sally'});  // assumes unique index
// find the most recent 5000 log message documents linked to that host as an array
> last_5k_data_pts = db.120217SallyRide1.find({"sensor": Sensor.speedometer}).sort({time : -1}).limit(5000)